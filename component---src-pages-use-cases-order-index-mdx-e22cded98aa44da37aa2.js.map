{"version":3,"sources":["webpack:///./src/pages/use-cases/order/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sIACA,sBACE,kBAAIC,WAAW,MAAf,sCACA,kBAAIA,WAAW,MAAf,gBAAqC,mBAAGA,WAAW,MAAS,CACxD,KAAQ,KADyB,kBAArC,8EAGA,kBAAIA,WAAW,MAAf,oEACA,kBAAIA,WAAW,MAAf,kDAEF,mEACA,sBACE,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,wDACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,+BAEF,yCACA,2LACA,qEACA,uFACA,+DACA,yDACA,oDACA,qCACA,2IACA,2CAKJJ,EAAWK,gBAAiB","file":"component---src-pages-use-cases-order-index-mdx-e22cded98aa44da37aa2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jeromeboyer/Code/AllCloudPaks/vaccine-solution-main/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This note let you run the order management code with a simple scenario that addresses the following features:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create Order with a User interface`}</li>\n      <li parentName=\"ul\">{`Validate the `}<a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`outbox pattern`}</a>{` works to get OrderCreated, OrderUpdated or OrderCancelled Events to Kafka`}</li>\n      <li parentName=\"ul\">{`Validate the blockchain has a record for the newly created order`}</li>\n      <li parentName=\"ul\">{`Integrate with the Shipment plan optimization`}</li>\n    </ul>\n    <h2>{`Components involved in this demonstration`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Order Service`}</li>\n      <li parentName=\"ul\">{`Debezium for change data capture on the outbox table`}</li>\n      <li parentName=\"ul\">{`Kafka `}</li>\n      <li parentName=\"ul\">{`Order Optimization Service`}</li>\n    </ul>\n    <h2>{`Scenario script`}</h2>\n    <p>{`Once the solution is up and running in your target deployment environment (local or OpenShift) execute the following steps to present an end to end demonstration.`}</p>\n    <h3>{`Validate existing vaccine lot shipment plan`}</h3>\n    <h3>{`Create an order from the user interface of the Order Service.`}</h3>\n    <h3>{`See how the shipment plan is modified`}</h3>\n    <h3>{`Validate the blockchain records`}</h3>\n    <h3>{`Present the events created`}</h3>\n    <h2>{`Run locally`}</h2>\n    <p>{`As a lightweight approach you can run the solution with docker compose. For that the configuration, test data and `}</p>\n    <h2>{`Run on OpenShift`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}