{"componentChunkName":"component---src-pages-use-cases-order-index-mdx","path":"/use-cases/order/","result":{"pageContext":{"frontmatter":{"title":"Order management and optimization demo","description":"Order management and optimization demonstration"},"relativePagePath":"/use-cases/order/index.mdx","titleType":"append","MdxNode":{"id":"3d77ef39-9bd0-50d2-aeb7-b893af1c1bef","children":[],"parent":"74519041-3f00-50c8-b34b-bdb772acf4f8","internal":{"content":"---\ntitle: Order management and optimization demo\ndescription: Order management and optimization demonstration\n--- \n\nThis note let you run the order management code with a simple scenario that addresses the following features:\n\n* Create Order with a User interface\n* Validate the [outbox pattern]() works to get OrderCreated, OrderUpdated or OrderCancelled Events to Kafka\n* Validate the blockchain has a record for the newly created order\n* Integrate with the Shipment plan optimization\n\n## Components involved in this demonstration\n\n* Order Service\n* Debezium for change data capture on the outbox table\n* Kafka \n* Order Optimization Service\n\n## Scenario script\n\nOnce the solution is up and running in your target deployment environment (local or OpenShift) execute the following steps to present an end to end demonstration.\n\n### Validate existing vaccine lot shipment plan\n\n### Create an order from the user interface of the Order Service. \n\n### See how the shipment plan is modified\n\n### Validate the blockchain records\n\n### Present the events created\n\n## Run locally\n\nAs a lightweight approach you can run the solution with docker compose. For that the configuration, test data and \n\n## Run on OpenShift \n","type":"Mdx","contentDigest":"08972ac00e820d339ba61342784ae30d","counter":200,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Order management and optimization demo","description":"Order management and optimization demonstration"},"exports":{},"rawBody":"---\ntitle: Order management and optimization demo\ndescription: Order management and optimization demonstration\n--- \n\nThis note let you run the order management code with a simple scenario that addresses the following features:\n\n* Create Order with a User interface\n* Validate the [outbox pattern]() works to get OrderCreated, OrderUpdated or OrderCancelled Events to Kafka\n* Validate the blockchain has a record for the newly created order\n* Integrate with the Shipment plan optimization\n\n## Components involved in this demonstration\n\n* Order Service\n* Debezium for change data capture on the outbox table\n* Kafka \n* Order Optimization Service\n\n## Scenario script\n\nOnce the solution is up and running in your target deployment environment (local or OpenShift) execute the following steps to present an end to end demonstration.\n\n### Validate existing vaccine lot shipment plan\n\n### Create an order from the user interface of the Order Service. \n\n### See how the shipment plan is modified\n\n### Validate the blockchain records\n\n### Present the events created\n\n## Run locally\n\nAs a lightweight approach you can run the solution with docker compose. For that the configuration, test data and \n\n## Run on OpenShift \n","fileAbsolutePath":"/Users/jeromeboyer/Code/AllCloudPaks/vaccine-solution-main/docs/src/pages/use-cases/order/index.mdx"}}}}